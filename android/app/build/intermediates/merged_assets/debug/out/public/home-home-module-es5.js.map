{"version":3,"sources":["webpack:///src/app/home/home.page.html","webpack:///src/app/home/home-routing.module.ts","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/home.page.scss","webpack:///src/app/home/home.page.ts"],"names":["routes","path","component","HomePageRoutingModule","imports","forChild","exports","HomePageModule","declarations","HomePage","router","userSrvc","alertController","quotes","user","username","didTheInitialTest","everyDayScore","firstTestScore","welcomeMessage","welcomeText","getUserInfo","then","shuffleArray","i","length","j","Math","floor","random","navigateByUrl","create","cssClass","header","message","buttons","text","role","handler","questionnaire","alert","present","myDate","Date","hrs","getHours","greet","selector","template"],"mappings":"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","file":"home-home-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title class=\\\"ion-text-center\\\">\\r\\n      Home\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col *ngIf=\\\"user.username\\\">\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <ion-label>{{welcomeMessage}} {{user.username}}</ion-label>\\r\\n        </ion-item>\\r\\n      </ion-col>\\r\\n      <ion-col (click)=\\\"presentAlert()\\\" size=\\\"auto\\\" *ngIf=\\\"user.firstTestScore\\\">\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <ion-label>Score:</ion-label>\\r\\n          <ion-badge slot=\\\"end\\\">{{user.firstTestScore}}</ion-badge>\\r\\n        </ion-item>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>Quote of the day</ion-card-title>\\r\\n\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>{{quotes[1].quoteText}}</ion-card-content>\\r\\n            <ion-card-subtitle class=\\\"ion-float-right ion-padding-end ion-padding-bottom\\\">{{quotes[1].quoteAuthor}}</ion-card-subtitle>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col *ngIf=\\\"!user.firstTestScore\\\">\\r\\n        <ion-button expand=\\\"block\\\" (click)=\\\"questionnaire()\\\">Lets do the questionnaire</ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomePage } from './home.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomePage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomePageRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomePage } from './home.page';\r\n\r\nimport { HomePageRoutingModule } from './home-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    HomePageRoutingModule\r\n  ],\r\n  declarations: [HomePage]\r\n})\r\nexport class HomePageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MifQ== */\";","import { Component } from '@angular/core';\r\nimport { User } from '../shared/user';\r\nimport { Router } from '@angular/router';\r\nimport quotes from '../shared/quotes.json';\r\nimport { UserService } from '../services/user.service';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Component( {\r\n  selector: 'app-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: [ 'home.page.scss' ]\r\n} )\r\nexport class HomePage {\r\n  quotes: any = quotes;\r\n  user: User = { username: '', didTheInitialTest: false, everyDayScore: [], firstTestScore: 0 };\r\n  welcomeMessage: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private userSrvc: UserService,\r\n    private alertController: AlertController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.welcomeMessage = this.welcomeText();\r\n    this.userSrvc.getUserInfo().then( user => this.user = user );\r\n    this.shuffleArray( quotes );\r\n  }\r\n  ionViewWillEnter() {\r\n\r\n    this.userSrvc.getUserInfo().then( user => this.user = user );\r\n  }\r\n\r\n  shuffleArray( quotes ) {\r\n    for ( let i = quotes.length - 1; i > 0; i-- ) {\r\n      const j = Math.floor( Math.random() * ( i + 1 ) );\r\n      [ quotes[ i ], quotes[ j ] ] = [ quotes[ j ], quotes[ i ] ];\r\n    }\r\n  }\r\n\r\n\r\n  questionnaire() {\r\n    this.router.navigateByUrl( 'questionnaire' );\r\n  }\r\n\r\n  async presentAlert() {\r\n    const alert = await this.alertController.create( {\r\n      cssClass: 'my-custom-class',\r\n      header: 'Result:',\r\n      message: 'You score suggests that you are.......\\n Do you want to do the questionaire again?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: ( ) => {\r\n            \r\n          }\r\n        }, {\r\n          text: 'Okay',\r\n          handler: () => {\r\n            this.questionnaire();\r\n          }\r\n        }\r\n      ]\r\n    } );\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  welcomeText() {\r\n    let myDate = new Date();\r\n    let hrs = myDate.getHours();\r\n    let greet;\r\n    if ( hrs < 12 )\r\n      return greet = \"Good morning,\";\r\n    else if ( hrs >= 12 && hrs <= 17 )\r\n      return greet = 'Good afternoon,';\r\n    else if ( hrs >= 17 && hrs <= 24 )\r\n      return greet = 'Good evening,';\r\n  }\r\n\r\n}\r\n"]}